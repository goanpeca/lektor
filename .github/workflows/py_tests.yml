name: Py tests master

on:
  push:
    branches:
      - master
      - 3.x-maintenance
    paths:
      - '.github/scripts/*.sh'
      - '.github/workflows/*.yml'
      - 'requirements/*.txt'
      - 'Makefile'
      - 'MANIFEST.in'
      - 'pylintrc'
      - '**.bat'
      - '**.py'
      - '**.sh'

  pull_request:
    branches:
      - master
      - 3.x-maintenance
    paths:
      - '.github/scripts/*.sh'
      - '.github/workflows/*.yml'
      - 'requirements/*.txt'
      - 'MANIFEST.in'
      - 'pylintrc'
      - '**.bat'
      - '**.py'
      - '**.sh'

jobs:
  ############################################################################
  # Close previous builds on the same branch
  ############################################################################
  cleanup-previous-runs:
    name: Cleanup previous builds
    runs-on: ubuntu-latest
    steps:
      - run: echo $GITHUB_EVENT_NAME
      - uses: rokroskar/workflow-run-cleanup-action@v0.2.2
        if: github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  ############################################################################
  # Lint jobs
  ############################################################################
  lint-py:
    name: Lint Python
    needs: cleanup-previous-runs
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false 
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Fetch branches
        run: git fetch --prune --unshallow
      - name: Check build skips
        shell: bash -l {0}
        run: source .github/scripts/check_skip.sh
      - name: Cache pip
        if: env.RUN_BUILD == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-3.8-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup Python
        if: env.RUN_BUILD == 'true'
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
          architecture: 'x64'
      - name: Install python dependencies
        if: env.RUN_BUILD == 'true'
        run: python -m pip install --editable .[test]
      - name: Show python environment
        if: env.RUN_BUILD == 'true'
        run: |
          python --version
          python -m pip list
      - name: Run python lint
        if: env.RUN_BUILD == 'true'
        run: pylint lektor

  ############################################################################
  # Smoke tests
  ############################################################################
  linux-smoke-py:
    name: Linux py${{ matrix.PYTHON_VERSION }} smoke test
    needs: cleanup-previous-runs
    runs-on: ubuntu-latest
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    strategy:
      fail-fast: false 
      matrix:
        PYTHON_VERSION: ['3.8']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Fetch branches
        run: git fetch --prune --unshallow
      - name: Check build skips
        shell: bash -l {0}
        run: source .github/scripts/check_skip.sh
      - name: Cache pip
        if: env.RUN_BUILD == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup python
        if: env.RUN_BUILD == 'true'
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install python dependencies
        if: env.RUN_BUILD == 'true'
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        if: env.RUN_BUILD == 'true'
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        if: env.RUN_BUILD == 'true'
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        if: env.RUN_BUILD == 'true'
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09

  ############################################################################
  # Python tests
  ############################################################################
  linux-py:
    name: Linux py${{ matrix.PYTHON_VERSION }} tests
    runs-on: ubuntu-latest
    needs: linux-smoke-py
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    strategy:
      fail-fast: false 
      matrix:
        PYTHON_VERSION: ['2.7', '3.5', '3.6', '3.7']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Fetch branches
        run: git fetch --prune --unshallow
      - name: Check build skips
        shell: bash -l {0}
        run: source .github/scripts/check_skip.sh
      - name: Cache pip
        if: env.RUN_BUILD == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup python
        if: env.RUN_BUILD == 'true'
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install python dependencies
        if: env.RUN_BUILD == 'true'
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        if: env.RUN_BUILD == 'true'
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        if: env.RUN_BUILD == 'true'
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        if: env.RUN_BUILD == 'true'
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09

  mac-py:
    name: Mac py${{ matrix.PYTHON_VERSION }} tests
    runs-on: macos-latest
    needs: linux-smoke-py
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    strategy:
      fail-fast: false 
      matrix:
        PYTHON_VERSION: ['2.7', '3.5', '3.8']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Fetch branches
        run: git fetch --prune --unshallow
      - name: Check build skips
        shell: bash -l {0}
        run: source .github/scripts/check_skip.sh
      - name: Cache pip
        if: env.RUN_BUILD == 'true'
        uses: actions/cache@v1
        with:
          path: ~/Library/Caches/pip
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**/setup.py') }}
      - name: Setup python
        if: env.RUN_BUILD == 'true'
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install system dependencies
        if: env.RUN_BUILD == 'true'      
        run: |
          brew update
          brew install imagemagick
          brew install ffmpeg
      - name: Install python dependencies
        if: env.RUN_BUILD == 'true'
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        if: env.RUN_BUILD == 'true'
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        if: env.RUN_BUILD == 'true'
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        if: env.RUN_BUILD == 'true'
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09

  win-py:
    name: Win py${{ matrix.PYTHON_VERSION }} tests
    runs-on: windows-latest
    needs: linux-smoke-py
    env:
      CI: True
      PYTHON_VERSION: ${{ matrix.PYTHON_VERSION }}
    strategy:
      fail-fast: false 
      matrix:
        PYTHON_VERSION: ['2.7', '3.5', '3.8']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Fetch branches
        run: git fetch --prune --unshallow
      - name: Check build skips
        shell: bash -l {0}
        run: source .github/scripts/check_skip.sh
      - name: Cache pip
        if: env.RUN_BUILD == 'true'
        uses: actions/cache@v1
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-py-${{ matrix.PYTHON_VERSION }}-pip-${{ hashFiles('**\setup.py') }}
      - name: Setup python
        if: env.RUN_BUILD == 'true'
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.PYTHON_VERSION }}
      - name: Install system dependencies
        if: env.RUN_BUILD == 'true'
        run: |
          choco install --timeout 600 imagemagick.tool
          choco install --timeout 600 ffmpeg
      - name: Install python dependencies
        if: env.RUN_BUILD == 'true'
        run: |
          python -m pip install --editable .[test]
          python -m pip install codecov
      - name: Show python environment
        if: env.RUN_BUILD == 'true'
        run: |
          python --version
          python -m pip list
      - name: Run python tests
        if: env.RUN_BUILD == 'true'
        run: pytest . --tb=long -svv --cov=lektor
      - name: Publish coverage
        if: env.RUN_BUILD == 'true'
        run: codecov -t 39974034-91d8-48d1-9698-de48e0667a09
